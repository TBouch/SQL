# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)



#1. What is the average danceability by artist and track?
SELECT artist_name, track_name, AVG(danceability) 
FROM BIT_DB.Spotifydata
Group by artist_name, track_name
Order by AVG(danceability)desc;
  
#2. Who are the top 10 artists based on popularity?
Select artist_name
from BIT_DB.Spotifydata
order by popularity desc
limit 10;

#3. What's the average danceability for the 10 most popular songs?
Select AVG(danceability)
from BIT_DB.Spotifydata
order by popularity desc
limit 10;


#4. What is the average valence for the 10 most popular songs and what key was it was in?  
Select  track_name, AVG(valence), key 
from BIT_DB.Spotifydata
Group by artist_name
order by popularity desc
limit 10;


#5. Which songs had a popularity greater than 90 and what was the tempo for those songs? 
Select track_name, tempo
from BIT_DB.Spotifydata
group by artist_name 
having popularity > 90
order by popularity;


#6. What are the top 10 least popular songs and what was its duration in minutes?
Select track_name, duration_ms/60000.00 minutes 
from BIT_DB.Spotifydata
order by popularity asc
limit 10;

